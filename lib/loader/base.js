'use strict';

/**
 * @interface BaseLoader
 * @memberof API.Loader
 * @description Interface for defining Bool.js loaders, extenders of the
 * loading behaviour. It cannot be instantiated.
 */
module.exports = Interface(
    "BaseLoader",
    [

        /**
         * @function API.Loader.BaseLoader#getDependencies
         * @description Retrieves external dependencies the loader depends to
         * properly execute.
         * @returns {Array<String>} A list of named modules the loader needs to
         * be executed.
         * @throws {Error} If it's a non-implemented function, it'll throw an
         * Error.
         */
        "getDependencies",

        /**
         * @function API.Loader.BaseLoader#getSettings
         * @description Retrieves application settings the loader depends to
         * properly execute.
         * @returns {Array<String>} A list of named settings the loader needs
         * to work.
         * @throws {Error} If it's a non-implemented function, it'll throw an
         * Error.
         */
        "getSettings",

        /**
         * @function API.Loader.BaseLoader#preBuild
         * @description Function called in the `pre-build` event generated by
         * the bootstraper.
         */
        "preBuild",

        /**
         * @function API.Loader.BaseLoader#build
         * @description Builds the component, using custom code.
         */
        "build",

        /**
         * @function API.Loader.BaseLoader#postBuild
         * @description Function called in the `post-build` event generated by
         * the bootstraper. Usually a garbage collector is used here.
         */
        "postBuild",

        /**
         * @function API.Loader.BaseLoader#unpackComponent
         * @description Unpacks the code to be executed for the application.
         * Implements a lazy function to replace it.
         * @returns {Function} The final executable code.
         * @throws {Error} If it's a non-implemented function, it'll throw an
         * Error.
         */
        "unpackComponent"

    ]
);
